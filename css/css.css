.grid {
  border: 4px solid;
  border-radius: 20px;
}
.grid_item {
  display: flex;
  justify-content: center;
  align-items: center;
  color: #fff;
  font-family: sans-serif;
  font-size: 48px;
}
.grid_item:nth-child(3n + 1){background-color: #96ceb4;}
.grid_item:nth-child(3n + 2){background-color: #96ce;}
.grid_item:nth-child(3n){background-color: #d0cd41;}

.grid{
  /* grid-template-columns: 1fr 1fr 1fr; */ /*min-content(100px) max-content(100px)- думаю догадаться что они делают не трудно*/   /* сколько надо столбцов стллько раз и казуем и указуем какая шарина */
  /* grid-template-columns: fit-content(300px) 1fr 1fr;  */ /* тут 1 столбец может быть меньше 300 пикселей но не больше */
  /* grid-template-columns: minmax(1px, 1000000px) 150px 3fr; */ /*первый будет шататься от 1 пикселя до 1000000 пикселей*/

  /* значения могут быть ремы пиксели проценты сантиметры и так далее  короч очень круто*/

  /* grid-template-columns: repeat(5, 100px); его можно комбинировтаь с чем то другим  и сначала указуем сколько раз повторить а потом какой размер каждого */
  /*grid-template-columns: repeat(5, 1fr) 1fr 300px; */ /* вот пример комбинирования */

  /* теперь не буду говорить как роботает сам проверь чтоб был вау еффект) */
  /* grid-template-columns: repeat(4, 30px 100px); */ /* хотя ладно скажу короче тут будет 4 столбика и их размеры будут чередоваться 30 пикселей и 100 пикселей */

  /*grid-template-columns: repeat(auto-fill, 100px); */ /* заполнит так на сколько хватит мести круто да? а теперь авто фит! */
  /* grid-template-columns: repeat(auto-fit, 100px); */ /* а щас он смотри еще и сколько елементов */
  grid-template-columns: repeat(auto-fit, minmax(20px, 1fr)); /* тут у нас семь столбцов а ширина секций зависит от размера экрана */
  /* посмотреть это можно в ./img/как_это_выглядит_у_меня_1.png */
}