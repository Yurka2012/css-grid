.grid, .grid2, .grid3 {
  border: 4px solid;
  border-radius: 20px;
}

.grid_item, .grid_item2, .grid_item3 {
  display: flex;
  justify-content: center;
  align-items: center;
  color: #fff;
  font-family: sans-serif;
  font-size: 48px;
}
.grid_item:nth-child(3n + 1), .grid_item2:nth-child(3n + 1), .grid_item3:nth-child(3n + 1){background-color: #96ceb4;}
.grid_item:nth-child(3n + 2), .grid_item2:nth-child(3n + 2), .grid_item3:nth-child(3n + 2){background-color: #96ce;}
.grid_item:nth-child(3n), .grid_item2:nth-child(3n), .grid_item3:nth-child(3n){background-color: #d0cd41;}

.grid{
  /* grid-template-columns: 1fr 1fr 1fr; */ /*min-content(100px) max-content(100px)- думаю догадаться что они делают не трудно*/   /* сколько надо столбцов стллько раз и казуем и указуем какая шарина */
  /* grid-template-columns: fit-content(300px) 1fr 1fr;  */ /* тут 1 столбец может быть меньше 300 пикселей но не больше */
  /* grid-template-columns: minmax(1px, 1000000px) 150px 3fr; */ /*первый будет шататься от 1 пикселя до 1000000 пикселей*/

  /* значения могут быть ремы пиксели проценты сантиметры и так далее  короч очень круто*/

  /* grid-template-columns: repeat(5, 100px); его можно комбинировтаь с чем то другим  и сначала указуем сколько раз повторить а потом какой размер каждого */
  /*grid-template-columns: repeat(5, 1fr) 1fr 300px; */ /* вот пример комбинирования */

  /* теперь не буду говорить как роботает сам проверь чтоб был вау еффект) */
  /* grid-template-columns: repeat(4, 30px 100px); */ /* хотя ладно скажу короче тут будет 4 столбика и их размеры будут чередоваться 30 пикселей и 100 пикселей */

  /*grid-template-columns: repeat(auto-fill, 100px); */ /* заполнит так на сколько хватит мести круто да? а теперь авто фит! */
  /* grid-template-columns: repeat(auto-fit, 100px); */ /* а щас он смотри еще и сколько елементов */
  grid-template-columns: repeat(auto-fit, minmax(20px, 1fr)); /* тут у нас семь столбцов а ширина секций зависит от размера экрана */
  /* посмотреть это можно в ./img/как_это_выглядит_у_меня_1.png */


  /* немного строк! */
  /* grid-template-rows: repeat(auto-fit, 100px); */
  /* короче так же так что не буду зацикливаться */


  /* grid-template-columns: repeat(3, 1fr); */
  /* grid-template-rows: repeat(3, 1fr); */
  /*grid-auto-rows: 100px;*/ /* так же все роботает и для столбцов и для строк */
}
.grid2{
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: repeat(3, 100px);
  /* grid-auto-rows: 100px;*//* так же все роботает и для столбцов и для строк */
  /* grid-auto-columns: 100px; */
  grid-auto-columns: 50px;
  grid-auto-rows: 50px;
}
.grid_item2:nth-child(3){
  /* grid-column-start: 4;
  grid-column-end: 6; */
  /* grid-column: 4/6; */
  /*grid-column: 4/ span 2;*/ /*розтянеться на две полосы а начнеться на 4 роботает и наоборот*/
  /* grid-row-start: 2;
  grid-row-end: 4; */
  /* grid-row: 2/4; */
  /* догадаться что они делают легко) если знаете английскийй )*/
  grid-area: 2/4/6/8; /* строки - столбцы - строки - стобцы (начало - начало - конец - конец)*/
}
.grid_item2:nth-child(1){
  grid-area: 1 / 1 / 2 / 2;
}
.grid_item2:nth-child(2){
  grid-area: 3/1/4/3;
}
.grid3{
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  grid-template-rows: repeat(3, 100px);
  /* код взят выше */
  /* а ниже это новое  */
  grid-template-areas: ''/*тут нужны ИЛИ одинарные ИЛИ двойные НО важно чтобы БЫЛИ КАВЫЧКИ*//* тут мы придумываем имя (сжелаем так же как было этого но по другому  и возможно 4 5 6 не будет или будут по другому */;
}
.grid_item3:nth-child(3){
  
}
.grid_item3:nth-child(1){

}
.grid_item3:nth-child(2){

}